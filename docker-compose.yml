version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:17
    container_name: text-rpg-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-text_rpg_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - text-rpg-network

  # Redis Cache and Pub/Sub
  redis:
    image: redis:7-alpine
    container_name: text-rpg-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - text-rpg-network

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: text-rpg-backend
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-text_rpg_db}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-}@redis:6379
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-this}
      - DEBUG=${DEBUG:-true}
      - ENVIRONMENT=${ENVIRONMENT:-development}
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/__pycache__
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - text-rpg-network

  # Celery Worker (for background tasks)
  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: text-rpg-celery
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-text_rpg_db}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-}@redis:6379
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-this}
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A app.core.celery worker --loglevel=info
    networks:
      - text-rpg-network

  # Database Migrations
  migrations:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: text-rpg-migrations
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-text_rpg_db}
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
    command: alembic upgrade head
    networks:
      - text-rpg-network
    profiles:
      - migration

volumes:
  postgres_data:
  redis_data:

networks:
  text-rpg-network:
    driver: bridge 